name: CI

on:
  - push

env:
  NIGHTLY_TOOLCHAIN: nightly-2024-01-27

jobs:
  check:
    name: Run checks
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check formatting
        run: cargo fmt -- --check
      - name: Check Clippy
        run: cargo clippy --all -- -Dwarnings
  test:
    strategy:
      matrix:
        toolchain:
          - "1.70.0"
          - stable
          - beta
        features:
          - "default"
          - "default safe"
          - "std"
          - "std safe"
          - "alloc"
          - "alloc safe"
          - "safe"
          - "none"
    name: Run tests (${{ matrix.toolchain }}, ${{ matrix.features }})
    runs-on: ubuntu-22.04
    env:
      TOOLCHAIN: ${{ matrix.toolchain }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install toolchain
        run: rustup toolchain install "$TOOLCHAIN"
      - name: Run tests
        run: |
          use_default_features=0
          feature_flags=()
          for feature in $FEATURES; do
            case "$feature" in
              "default" )
                use_default_features=1
                ;;
              "none" )
                ;;
              * )
                feature_flags+=(--features "$feature")
                ;;
            esac
          done

          if [ "$use_default_features" -eq 0 ]; then
            feature_flags+=(--no-default-features)
          fi

          cargo +"$TOOLCHAIN" test "${feature_flags[@]}"

        env:
          FEATURES: ${{ matrix.features }}
  benchmark:
    name: Run benchmarks
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run benchmarks
        run: cargo bench
  miri:
    name: Run Miri tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Rust nightly toolchain
        run: |
          rustup toolchain install "$NIGHTLY_TOOLCHAIN" \
            --component miri
      - name: Run tests with Miri
        run: cargo +"$NIGHTLY_TOOLCHAIN" miri test
        env:
          # Tweak proptest settings for Miri
          PROPTEST_CASES: "16"
          PROPTEST_DISABLE_FAILURE_PERSISTENCE: "true"
          MIRIFLAGS: "-Zmiri-env-forward=PROPTEST_DISABLE_FAILURE_PERSISTENCE -Zmiri-env-forward=PROPTEST_CASES"
